require 'rspec/expectations'

# Example use:
# expect(resolver_for(my_type).with(obj, args, ctx)).to resolve_field('my_field').as 'value'
#
RSpec::Matchers.define :resolve_field do |field|
  # Accepts an array of [:type, :obj, :args, :ctx], as can be generated by #resolver_for(...).with(obj, args, ctx)
  match do |type_resolver|
    @type, @obj, @args, @ctx = type_resolver
    @resolved = @type.fields[field].resolve(@obj, @args, @ctx)
    expect(@resolved).to match @expected
  end

  failure_message do |_|
    "expected `#{field}` to resolve as `#{@expected}`, got `#{@resolved}`, with (`#{@obj}`, `#{@args}`, `#{@ctx}`)"
  end

  description do
    "resolve field `#{field}` as `#{@expected}`"
  end

  chain :as do |expected|
    @expected = expected
  end
end
